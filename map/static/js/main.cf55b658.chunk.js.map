{"version":3,"sources":["icon-cluster-layer.js","App.js","serviceWorker.js","index.js"],"names":["IconClusterLayer","changeFlags","somethingChanged","props","oldProps","rebuildIndex","dataChanged","sizeScale","index","Supercluster","maxZoom","radius","load","data","map","d","geometry","coordinates","getPosition","properties","this","setState","z","Math","floor","context","viewport","zoom","state","getClusters","info","mode","pickedObject","object","cluster","objects","getLeaves","cluster_id","f","iconAtlas","iconMapping","IconLayer","getSubLayerProps","id","getIcon","size","point_count","getSize","min","CompositeLayer","MAP_VIEW","MapView","repeat","INITIAL_VIEW_STATE","longitude","latitude","pitch","bearing","App","x","y","hoveredObject","expandedObjects","_onHover","bind","_onClick","_closePopup","_renderhoveredItems","showCluster","className","style","left","top","name","year","mass","meteorClass","class","key","layerProps","pickable","onHover","sizeUnits","sizeMinPixels","document","getElementById","visibility","mapStyle","value","onChange","showMap","layers","_renderLayers","views","initialViewState","controller","dragRotate","onViewStateChange","onClick","reuseMaps","preventStyleDiffing","mapboxApiAccessToken","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf55b658.chunk.js","sourcesContent":["import {CompositeLayer} from '@deck.gl/core';\nimport {IconLayer} from '@deck.gl/layers';\nimport Supercluster from 'supercluster';\n\nfunction getIconName(size) {\n  if (size === 0) {\n    return '';\n  }\n  if (size < 10) {\n    return `marker-${size}`;\n  }\n  if (size < 100) {\n    return `marker-${Math.floor(size / 10)}0`;\n  }\n  return 'marker-100';\n}\n\nfunction getIconSize(size) {\n  return Math.min(100, size) / 100 + 1;\n}\n\nexport default class IconClusterLayer extends CompositeLayer {\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    const rebuildIndex = changeFlags.dataChanged || props.sizeScale !== oldProps.sizeScale;\n\n    if (rebuildIndex) {\n      const index = new Supercluster({maxZoom: 16, radius: props.sizeScale});\n      index.load(\n        props.data.map(d => ({\n          geometry: {coordinates: props.getPosition(d)},\n          properties: d\n        }))\n      );\n      this.setState({index});\n    }\n\n    const z = Math.floor(this.context.viewport.zoom);\n    if (rebuildIndex || z !== this.state.z) {\n      this.setState({\n        data: this.state.index.getClusters([-180, -85, 180, 85], z),\n        z\n      });\n    }\n  }\n\n  getPickingInfo({info, mode}) {\n    const pickedObject = info.object && info.object.properties;\n    if (pickedObject) {\n      if (pickedObject.cluster && mode !== 'hover') {\n        info.objects = this.state.index\n          .getLeaves(pickedObject.cluster_id, 25)\n          .map(f => f.properties);\n      }\n      info.object = pickedObject;\n    }\n    return info;\n  }\n\n  renderLayers() {\n    const {data} = this.state;\n    const {iconAtlas, iconMapping, sizeScale} = this.props;\n\n    return new IconLayer(\n      this.getSubLayerProps({\n        id: 'icon',\n        data,\n        iconAtlas,\n        iconMapping,\n        sizeScale,\n        getPosition: d => d.geometry.coordinates,\n        getIcon: d => getIconName(d.properties.cluster ? d.properties.point_count : 1),\n        getSize: d => getIconSize(d.properties.cluster ? d.properties.point_count : 1)\n      })\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {MapView} from '@deck.gl/core';\nimport {IconLayer} from '@deck.gl/layers';\n\nimport IconClusterLayer from './icon-cluster-layer';\n\n\n\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoiYXRoaXNoYXlkIiwiYSI6ImNrYzl6MnhzZjFxNnoydXJpcHA4N3QxaHoifQ.PdaHvhGZEeZyRzNNswxQHg\"; // eslint-disable-line\n\n// Source data CSV\nconst DATA_URL =\n  'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/icon/meteorites.json'; // eslint-disable-line\n\nconst MAP_VIEW = new MapView({repeat: true});\nconst INITIAL_VIEW_STATE = {\n  longitude: -35,\n  latitude: 36.7,\n  zoom: 1.8,\n  maxZoom: 20,\n  pitch: 0,\n  bearing: 0\n};\n\n/* eslint-disable react/no-deprecated */\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      x: 0,\n      y: 0,\n      hoveredObject: null,\n      expandedObjects: null\n    };\n    this._onHover = this._onHover.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._closePopup = this._closePopup.bind(this);\n    this._renderhoveredItems = this._renderhoveredItems.bind(this);\n  }\n\n  _onHover(info) {\n    if (this.state.expandedObjects) {\n      return;\n    }\n\n    const {x, y, object} = info;\n    this.setState({x, y, hoveredObject: object});\n  }\n\n  _onClick(info) {\n    const {showCluster = true} = this.props;\n    const {x, y, objects, object} = info;\n\n    if (object && showCluster) {\n      this.setState({x, y, expandedObjects: objects || [object]});\n    } else {\n      this._closePopup();\n    }\n  }\n\n  _closePopup() {\n    if (this.state.expandedObjects) {\n      this.setState({expandedObjects: null, hoveredObject: null});\n    }\n  }\n\n  _renderhoveredItems() {\n    const {x, y, hoveredObject, expandedObjects} = this.state;\n\n    if (expandedObjects) {\n      return (\n        <div className=\"tooltip interactive\" style={{left: x, top: y}}>\n          {expandedObjects.map(({name, year, mass, class: meteorClass}) => {\n            return (\n              <div key={name}>\n                <h5>{name}</h5>\n                <div>Year: {year || 'unknown'}</div>\n                <div>Class: {meteorClass}</div>\n                <div>Mass: {mass}g</div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n\n    if (!hoveredObject) {\n      return null;\n    }\n\n    return hoveredObject.cluster ? (\n      <div className=\"tooltip\" style={{left: x, top: y}}>\n        {hoveredObject.point_count} records\n      </div>\n    ) : (\n      <div className=\"tooltip\" style={{left: x, top: y}}>\n        {hoveredObject.name} {hoveredObject.year ? `(${hoveredObject.year})` : ''}\n      </div>\n    );\n  }\n\n  _renderLayers() {\n    const {\n      data = DATA_URL,\n      iconMapping = {\n        \"marker-1\": {\n          \"x\": 0,\n          \"y\": 0,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-2\": {\n          \"x\": 128,\n          \"y\": 0,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-3\": {\n          \"x\": 256,\n          \"y\": 0,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-4\": {\n          \"x\": 384,\n          \"y\": 0,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-5\": {\n          \"x\": 0,\n          \"y\": 128,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-6\": {\n          \"x\": 128,\n          \"y\": 128,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-7\": {\n          \"x\": 256,\n          \"y\": 128,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-8\": {\n          \"x\": 384,\n          \"y\": 128,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-9\": {\n          \"x\": 0,\n          \"y\": 256,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-10\": {\n          \"x\": 128,\n          \"y\": 256,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-20\": {\n          \"x\": 256,\n          \"y\": 256,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-30\": {\n          \"x\": 384,\n          \"y\": 256,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-40\": {\n          \"x\": 0,\n          \"y\": 384,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-50\": {\n          \"x\": 128,\n          \"y\": 384,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-60\": {\n          \"x\": 256,\n          \"y\": 384,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-70\": {\n          \"x\": 384,\n          \"y\": 384,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-80\": {\n          \"x\": 0,\n          \"y\": 512,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-90\": {\n          \"x\": 128,\n          \"y\": 512,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker-100\": {\n          \"x\": 256,\n          \"y\": 512,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        },\n        \"marker\": {\n          \"x\": 384,\n          \"y\": 512,\n          \"width\": 128,\n          \"height\": 128,\n          \"anchorY\": 128\n        }\n      },\n      iconAtlas = 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/icon/location-icon-atlas.png',\n      showCluster = true\n    } = this.props;\n\n\n\n    const layerProps = {\n      data,\n      pickable: true,\n      getPosition: d => d.coordinates,\n      iconAtlas,\n      iconMapping,\n      onHover: this._onHover\n    };\n\n    const layer = showCluster\n      ? new IconClusterLayer({...layerProps, id: 'icon-cluster', sizeScale: 60})\n      : new IconLayer({\n          ...layerProps,\n          id: 'icon',\n          getIcon: d => 'marker',\n          sizeUnits: 'meters',\n          sizeScale: 2000,\n          sizeMinPixels: 6\n        });\n\n    return [layer];\n  }\n\n  showMap () {\n    document.getElementById(\"deckgl-wrapper\").style.visibility = 'visible'\n  }\n\n  render() {\n    const {mapStyle = 'mapbox://styles/mapbox/dark-v9'} = this.props;\n\n    return (\n      <>\n      <div id=\"control-panel\">\n    <label>Technical Function</label>\n    <select>\n        <option value=\"select\">--- SELECT ---</option>\n        <option value=\"1\">Development</option>\n    </select>\n\n    <label>Function</label>\n    <select>\n      <option value=\"select\">--- SELECT ---</option>\n      <option value=\"1\">Concept Engineering</option>\n    </select>\n\n    <label>Forums</label>\n    <select id=\"forum-list\" onChange={this.showMap} >\n      <option value=\"select\">--- SELECT ---</option>\n      <option value=\"1\">Forum 1</option>\n      <option value=\"2\">Forum 2</option>\n    </select>      \n\n   \n</div>\n      <DeckGL\n        layers={this._renderLayers()}\n        views={MAP_VIEW}\n        initialViewState={INITIAL_VIEW_STATE}\n        controller={{dragRotate: false}}\n        onViewStateChange={this._closePopup}\n        onClick={this._onClick}\n      >\n        <StaticMap\n          reuseMaps\n          mapStyle={mapStyle}\n          preventStyleDiffing={true}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n        />\n\n        {this._renderhoveredItems}\n      </DeckGL>\n      </>\n    );\n  }\n}\n\nexport function renderToDOM(container) {\n  render(<App />, container);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}